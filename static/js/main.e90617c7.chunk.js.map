{"version":3,"sources":["../node_modules/celer-light-client/browser sync","utils/utils.ts","ClientContext.ts","components/common/BoxWithMarginTop.tsx","components/common/CelerButton.tsx","components/common/CenteredFlexWithMarginTop.tsx","components/common/SmallPrompt.tsx","components/common/Title.tsx","components/common/ErrorPrompt.tsx","components/common/Header.tsx","components/common/OnChainPrompt.tsx","components/common/SuccessPrompt.tsx","components/ActivateCard.tsx","components/ConnectCard/ConnectCard.tsx","components/DepositCard.tsx","components/SendCard.tsx","components/TokenDetails/TokenDetailsHeader.tsx","components/TokenDetails/TokenDetails.tsx","components/TokenList/TokenListItem.tsx","components/TokenList/TokenList.tsx","components/WithdrawCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TxStatus","emptyClientState","client","undefined","setClient","ClientContext","React","createContext","CELER_FONT","createMuiTheme","palette","primary","grey","secondary","BoxWithMarginTop","props","style","marginTop","StyledButton","styled","Button","CelerButton","StylesProvider","injectFirst","variant","color","size","CenteredFlexWithMarginTop","position","left","marginRight","transform","flexDirection","alignItems","width","minWidth","SmallPrompt","fontFamily","fontSize","letterSpacing","lineHeight","textAlign","Title","fontWeight","ErrorPrompt","title","prompt","history","useHistory","onClick","replace","Header","text","close","bgcolor","marginLeft","Close","OnChainPrompt","SuccessPrompt","doneCallback","ActivateCard","useContext","locationState","location","state","tokenType","tokenAddress","minDeposit","maxDeposit","useState","amountEth","setAmountEth","IDLE","status","setStatus","error","setError","activate","a","amountWei","ethers","utils","parseEther","toString","promise","openPaymentChannel","TokenType","ETH","ERC20","PROCESSING","SUCCEEDED","message","FAILED","minDepositEth","formatEther","maxDepositEth","card","labelWidth","onChange","event","target","value","endAdornment","inputProps","activatingPrompt","successPrompt","errorPrompt","ConnectCard","connect","window","ethereum","web3","autoRefreshOnNetworkChange","enable","provider","providers","Web3Provider","currentProvider","getNetwork","network","name","config","mainnetConfig","contractsInfo","mainnetContractsInfo","ropstenConfig","ropstenContractsInfo","localConfig","localContractsInfo","Celer","create","DepositCard","channelId","amount","setAmount","deposit","processingPrompt","SendCard","destination","setDestination","send","sendPayment","TokenDetailsHeader","symbol","ArrowBack","TokenDetails","tokenSymbol","ActivateButton","TokenListItem","tokenDisplayInfo","isLoading","setIsLoading","setChannelId","activated","balance","balanceInfo","setBalanceInfo","useEffect","getBalance","getAllPaymentChannelIdsForToken","address","channelIds","length","getPaymentChannelInfo","channel","freeSendingCapacity","interval","setInterval","clearInterval","type","right","divider","margin","alt","src","iconUrl","TokenList","tokenDisplayInfos","tokens","token","push","depositLimits","map","info","i","key","WithdrawCard","withdraw","cooperativeWithdraw","App","Provider","basename","process","path","children","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6GAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,kDC+BbC,E,gECNNC,EAAmB,CACvBC,YAAQC,EACRC,UAAW,cAGAC,EAAgBC,IAAMC,cAA2BN,G,0EDHjDO,GAPcC,YAAe,CACxCC,QAAS,CACPC,QAASC,IACTC,UAAWD,OAMb,mE,SAEUZ,O,eAAAA,I,2BAAAA,I,yBAAAA,I,oBAAAA,M,kBENGc,EAJyC,SAAAC,GAAK,OAC3D,qCAAKC,MAAO,CAAEC,UAAW,QAAaF,K,kXCIxC,IAAMG,EAAeC,YAAOC,EAAA,EAAPD,CAAH,IACDX,GA4BFa,EAX4B,SAAAN,GAAK,OAC9C,kBAACO,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAACL,EAAD,eACEM,QAAQ,YACRC,MAAM,UACNC,KAAM,UACFX,M,QCbKY,EAjBkD,SAAAZ,GAAK,OACpE,kBAAC,IAAD,eACEC,MAAO,CACLC,UAAW,MACXW,SAAU,QACVC,KAAM,MACNC,YAAa,OACbC,UAAW,uBAEbC,cAAc,SACdC,WAAYlB,EAAMkB,WAAalB,EAAMkB,WAAa,SAClDC,MAAM,MACNC,SAAS,SACLpB,K,iBCCOqB,EAZoC,SAAArB,GAAK,OACtD,kBAAC,IAAD,eACEU,MAAOV,EAAMU,MAAQV,EAAMU,MAAQ,UACnCY,WAAY7B,EACZ8B,SAAS,OACTC,cAAc,SACdC,WAAW,OACXC,UAAW1B,EAAM0B,UAAY1B,EAAM0B,UAAY,UAC3C1B,KCGO2B,EAX8B,SAAA3B,GAAK,OAChD,kBAAC,IAAD,eACEU,MAAM,UACNY,WAAY7B,EACZmC,WAAY5B,EAAM4B,WAAa5B,EAAM4B,WAAa,OAClDL,SAAS,OACTC,cAAc,UACVxB,KC6BO6B,EAvBiC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAClDC,EAAUC,cAEhB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAQH,GACR,kBAAC,EAAD,KACE,6BAEF,kBAAC,EAAD,CAAa5B,UAAU,OAAO6B,GAC9B,kBAAC,EAAD,KACE,uBACEG,QAAS,WACPF,EAAQG,QAAQ,OAGlB,kBAAC,IAAD,CAAMb,WAAY7B,GAAlB,iB,kBC1BK2C,EApBuB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7C,OACE,uBAAKnB,MAAM,QAAQoB,QAAQ,UAAUrB,WAAW,UAC9C,kBAAC,IAAD,KACE,kBAAC,EAAD,CACER,MAAM,UACNS,MAAM,MACNjB,UAAU,OACVsC,WAAW,QAEVH,GAEH,uBAAYH,QAASI,GACnB,kBAACG,EAAA,EAAD,U,SCyBKC,EAZqC,SAAC,GAAuB,IAArBZ,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC5D,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAQD,GACR,kBAAC,EAAD,KACE,6BAEF,kBAAC,EAAD,CAAa5B,UAAU,OAAO6B,K,QCUrBY,EAjBqC,SAAC,GAG9C,IAFLb,EAEI,EAFJA,MACAc,EACI,EADJA,aAEA,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAQd,GACR,kBAAC,EAAD,KACE,6BAEF,kBAAC,EAAD,CAAa7B,MAAO,CAAEC,UAAW,OAASgC,QAASU,GAAnD,UCwGSC,EAtGgB,WAAO,IAC5B1D,EAAW2D,qBAAwBxD,GAAnCH,OAEF6C,EAAUC,cACVc,EAAgBf,EAAQgB,SAASC,MACjCC,EAAYH,GAAiBA,EAAcG,UAC3CC,EAAeJ,GAAiBA,EAAcI,aAC9CC,EAAaL,GAAiBA,EAAcK,WAC5CC,EAAaN,GAAiBA,EAAcM,WARf,EAUDC,mBAAiB,IAVhB,mBAU5BC,EAV4B,KAUjBC,EAViB,OAWPF,mBAAmBrE,EAASwE,MAXrB,mBAW5BC,EAX4B,KAWpBC,EAXoB,OAYTL,mBAAiB,IAZR,mBAY5BM,EAZ4B,KAYrBC,EAZqB,KAcnC,IAAK1E,IAAW+D,IAAcC,EAE5B,OADAnB,EAAQG,QAAQ,KACT,KAGT,IAIM2B,EAAQ,uCAAG,8BAAAC,EAAA,6DACTC,EAAYC,SAAOC,MAAMC,WAAWZ,GAAWa,WAC/CC,EAAUlF,EAAOmF,mBACP,QAAdpB,EAAsBqB,YAAUC,IAAMD,YAAUE,MAChDtB,EACAa,EACAA,GAEFL,EAAU1E,EAASyF,YARJ,kBAUPL,EAVO,OAWbV,EAAU1E,EAAS0F,WAXN,gDAabd,EAAS,KAAEe,SAAW,KAAER,YACxBT,EAAU1E,EAAS4F,QAdN,yDAAH,qDAkBRC,EAAgBb,SAAOC,MAAMa,YAAY3B,GACzC4B,EAAgBf,SAAOC,MAAMa,YAAY1B,GAEzC4B,EACJ,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQ5C,KAAK,WAAWC,MA5BhB,WACZN,EAAQG,QAAQ,cA4BZ,kBAAC,EAAD,CAAOjC,UAAU,OAAjB,mBACA,uBACED,MAAO,CAAEC,UAAW,MAAOiB,MAAO,QAClC+D,WAAY,EACZC,SAAU,SAAAC,GAAK,OAAI5B,EAAa4B,EAAMC,OAAOC,QAC7CC,aAAc,uBAAgB1E,SAAS,OAAzB,OACd2E,WAAY,CACV,aAAc,YAGlB,kBAAC,EAAD,CAAa9D,UAAU,QAAvB,iCAGA,kBAAC,EAAD,CAAaA,UAAU,QAAvB,oBACoBoD,EADpB,QAGA,kBAAC,EAAD,CAAapD,UAAU,QAAvB,oBACoBsD,EADpB,SAIF,kBAAC,EAAD,CAAa/E,MAAO,CAAEC,UAAW,OAASgC,QAAS4B,GAAnD,SAME2B,EACJ,kBAAC,EAAD,CACE3D,MAAM,aACNC,OAAO,0DAIL2D,EACJ,kBAAC,EAAD,CACE5D,MAAM,qBACNc,aAAc,kBAAMZ,EAAQG,QAAQ,cAIlCwD,EAAc,kBAAC,EAAD,CAAa7D,MAAM,kBAAkBC,OAAQ6B,IAEjE,OAAQF,GACN,KAAKzE,EAASwE,KACZ,OAAOwB,EACT,KAAKhG,EAASyF,WACZ,OAAOe,EACT,KAAKxG,EAAS0F,UACZ,OAAOe,EACT,KAAKzG,EAAS4F,OACZ,OAAOc,I,gDChCEC,EAhEe,WAAO,IAAD,EACJ9C,qBAAwBxD,GAA9CH,EAD0B,EAC1BA,OAAQE,EADkB,EAClBA,UACV2C,EAAUC,cAEhB,GAAI9C,EAEF,OADA6C,EAAQG,QAAQ,WACT,KAGT,IAAM0D,EAAO,uCAAG,oCAAA9B,EAAA,yDAEe,qBAApB+B,OAAOC,UACS,qBAAhBD,OAAOE,KAHF,qDAOVF,OAAOC,SAPG,uBAQZD,OAAOC,SAASE,4BAA6B,EARjC,SASNH,OAAOC,SAASG,SATV,cAWRC,EAAW,IAAIlC,SAAOmC,UAAUC,aACpCP,OAAOC,UAAYD,OAAOE,KAAKM,iBAZnB,SAiBQH,EAASI,aAjBjB,OAiBRC,EAjBQ,YAkBNA,EAAQC,KAlBF,OAmBP,cAnBO,QAuBP,YAvBO,gCAoBVC,EAASC,EACTC,EAAgBC,EArBN,oCAwBVH,EAASI,EACTF,EAAgBG,EAzBN,6BA4BVL,EAASM,EACTJ,EAAgBK,EA7BN,yBA+BOC,QAAMC,OACzBrB,OAAOC,UAAYD,OAAOE,KAAKM,gBAC/B,EACAM,EACAF,GAnCY,QA+BRvH,EA/BQ,OAqCdE,EAAUF,GACV6C,EAAQG,QAAQ,WAtCF,4CAAH,qDAyCb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAahB,MAAM,SAAnB,8DAIF,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAae,QAAS2D,GAAtB,qBCkBOuB,GAvFe,WAAO,IAC3BjI,EAAW2D,qBAAwBxD,GAAnCH,OAEF6C,EAAUC,cACVc,EAAgBf,EAAQgB,SAASC,MACjCoE,EAAYtE,GAAiBA,EAAcsE,UAC3CnE,EAAYH,GAAiBA,EAAcG,UAC3CC,EAAeJ,GAAiBA,EAAcI,aAPlB,EASNG,mBAAiB,IATX,mBAS3BgE,EAT2B,KASnBC,EATmB,OAUNjE,mBAAmBrE,EAASwE,MAVtB,mBAU3BC,EAV2B,KAUnBC,EAVmB,OAWRL,mBAAiB,IAXT,mBAW3BM,EAX2B,KAWpBC,EAXoB,KAalC,IAAK1E,IAAWkI,IAAcnE,IAAcC,EAE1C,OADAnB,EAAQG,QAAQ,KACT,KAGT,IAIMqF,EAAO,uCAAG,4BAAAzD,EAAA,6DACRM,EAAUlF,EAAOqI,QACrBH,EACc,QAAdnE,EAAsBqB,YAAUC,IAAMD,YAAUE,MAChD6C,GAEF3D,EAAU1E,EAASyF,YANL,kBAQNL,EARM,OASZV,EAAU1E,EAAS0F,WATP,gDAWZd,EAAS,KAAEe,SAAW,KAAER,YACxBT,EAAU1E,EAAS4F,QAZP,yDAAH,qDAgBPI,EACJ,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQ5C,KAAK,UAAUC,MAvBf,WACZN,EAAQG,QAAQ,cAuBZ,kBAAC,EAAD,CAAOjC,UAAU,OAAjB,UACA,uBACED,MAAO,CAAEC,UAAW,MAAOiB,MAAO,QAClC+D,WAAY,EACZC,SAAU,SAAAC,GAAK,OAAImC,EAAUnC,EAAMC,OAAOC,QAC1CC,aAAc,uBAAgB1E,SAAS,OAAzB,OACd2E,WAAY,CACV,aAAc,aAIpB,uBAAKtF,UAAU,OACb,kBAAC,EAAD,CAAagC,QAASsF,GAAtB,UAKAC,EACJ,kBAAC,EAAD,CACE3F,MAAM,aACNC,OAAO,uDAIL2D,EACJ,kBAAC,EAAD,CACE5D,MAAM,oBACNc,aAAc,kBAAMZ,EAAQG,QAAR,iBAA0BgB,OAI5CwC,EAAc,kBAAC,EAAD,CAAa7D,MAAM,iBAAiBC,OAAQ6B,IAEhE,OAAQF,GACN,KAAKzE,EAASwE,KACZ,OAAOwB,EACT,KAAKhG,EAASyF,WACZ,OAAO+C,EACT,KAAKxI,EAAS0F,UACZ,OAAOe,EACT,KAAKzG,EAAS4F,OACZ,OAAOc,IC3BE+B,GA5DY,WAAO,IACxBvI,EAAW2D,qBAAwBxD,GAAnCH,OAEF6C,EAAUC,cACViB,EAAYlB,EAAQgB,SAASC,MAAMC,UACnCC,EAAenB,EAAQgB,SAASC,MAAME,aALb,EAOOG,mBAAiB,IAPxB,mBAOxBqE,EAPwB,KAOXC,EAPW,OAQHtE,mBAAiB,IARd,mBAQxBgE,EARwB,KAQhBC,EARgB,KAU/B,IAAKpI,IAAW+D,IAAcC,EAE5B,OADAnB,EAAQG,QAAQ,KACT,KAGT,IAIM0F,EAAI,uCAAG,sBAAA9D,EAAA,sEACL5E,EAAO2I,YACG,QAAd5E,EAAsBqB,YAAUC,IAAMD,YAAUE,MAChDtB,EACAwE,EACAL,GALS,OAOXtF,EAAQG,QAAQ,WAPL,2CAAH,qDAUV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQE,KAAK,OAAOC,MAjBZ,WACZN,EAAQG,QAAQ,cAiBZ,kBAAC,EAAD,CAAOjC,UAAU,OAAjB,uBACA,uBACED,MAAO,CAAEC,UAAW,MAAOiB,MAAO,QAClC+D,WAAY,EACZC,SAAU,SAAAC,GAAK,OAAIwC,EAAexC,EAAMC,OAAOC,QAC/CE,WAAY,CACV,aAAc,iBAGlB,kBAAC,EAAD,CAAOtF,UAAU,OAAjB,UACA,uBACED,MAAO,CAAEC,UAAW,MAAOiB,MAAO,QAClC+D,WAAY,EACZC,SAAU,SAAAC,GAAK,OAAImC,EAAUnC,EAAMC,OAAOC,QAC1CC,aAAc,uBAAgB1E,SAAS,OAAzB,OACd2E,WAAY,CACV,aAAc,aAIpB,kBAAC,EAAD,CAAavF,MAAO,CAAEC,UAAW,OAASgC,QAAS2F,GAAnD,U,UC/BSE,GAtB+C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzDhG,EAAUC,cAEhB,OACE,uBAAKd,MAAM,QAAQoB,QAAQ,UAAUrB,WAAW,UAC9C,kBAAC,IAAD,KACE,uBAAYgB,QAAS,kBAAMF,EAAQG,QAAQ,aACzC,kBAAC8F,GAAA,EAAD,OAEF,kBAAC,EAAD,CACEvH,MAAM,UACNS,MAAM,OACNjB,UAAU,OACVsC,WAAW,SAEVwF,M,wVCVX,IAAM7H,GAAeC,YAAOC,EAAA,EAAPD,CAAH,MAkFH8H,GAhEgB,WAC7B,IAAMlG,EAAUC,cACVc,EAAgBf,EAAQgB,SAASC,MACjCoE,EAAYtE,GAAiBA,EAAcsE,UAC3CnE,EAAYH,GAAiBA,EAAcG,UAC3CiF,EAAcpF,GAAiBA,EAAcoF,YAC7ChF,EAAeJ,GAAiBA,EAAcI,aAEpD,OAAKkE,GAAcnE,GAAciF,GAAgBhF,EAM/C,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAoB6E,OAAQG,IAC5B,kBAAC,IAAD,KACE,kBAAC5H,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC,GAAD,CACE0B,QAAS,kBACPF,EAAQG,QAAQ,WAAY,CAC1BkF,YACAnE,YACAiF,cACAhF,mBANN,YAaF,kBAAC5C,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC,GAAD,CACE0B,QAAS,kBACPF,EAAQG,QAAQ,YAAa,CAC3BkF,YACAnE,YACAiF,cACAhF,mBANN,aAaF,kBAAC5C,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC,GAAD,CACE0B,QAAS,kBACPF,EAAQG,QAAQ,QAAS,CACvBkF,YACAnE,YACAiF,cACAhF,mBANN,YArCNnB,EAAQG,QAAQ,KACT,O,iTCtBX,IAAMiG,GAAiBhI,YAAOC,EAAA,EAAPD,CAAH,MAgHLiI,GAlGqC,SAAC,GAG9C,IAFLlJ,EAEI,EAFJA,OACAmJ,EACI,EADJA,iBACI,EAC8BhF,oBAAkB,GADhD,mBACGiF,EADH,KACcC,EADd,OAE8BlF,mBAAiB,IAF/C,mBAEG+D,EAFH,KAEcoB,EAFd,OAGkCnF,mBAAsB,CAC1DoF,WAAW,EACXC,QAAS,MALP,mBAGGC,EAHH,KAGgBC,EAHhB,KAOE7G,EAAUC,cAEhB6G,qBAAU,WACR,IAAMC,EAAU,uCAAG,gCAAAhF,EAAA,sEACQ5E,EAAO6J,gCAC9BV,EAAiBW,SAFF,UACXC,EADW,OAIjBV,GAAa,GACa,IAAtBU,EAAWC,OALE,gBAMfN,EAAe,CAAEH,WAAW,EAAOC,QAAS,MAN7B,8BAQTtB,EAAY6B,EAAW,GAC7BT,EAAapB,GATE,UAUOlI,EAAOiK,sBAAsB/B,GAVpC,QAUTgC,EAVS,OAWfR,EAAe,CACbH,WAAW,EACXC,QAASU,EAAQV,QAAQW,sBAbZ,4CAAH,qDAiBhBP,IACA,IAAMQ,EAAWC,aAAY,kBAAMT,MAAc,KACjD,OAAO,kBAAMU,cAAcF,MAC1B,CAACpK,EAAQmJ,EAAiBW,UAE7B,IASIvF,EATEI,EAAQ,uCAAG,sBAAAC,EAAA,sDACf/B,EAAQG,QAAQ,YAAa,CAC3Be,UAAWoF,EAAiBoB,KAC5BvG,aAAcmF,EAAiBW,QAC/B7F,WAAYkF,EAAiBlF,WAC7BC,WAAYiF,EAAiBjF,aALhB,2CAAH,qDAWZK,EADE6E,EAEA,kBAAC,EAAD,CAAa1H,SAAS,WAAW8I,MAAM,OAAvC,WAKEf,EAAYF,UAEZ,kBAAC,EAAD,CAAahH,UAAU,QAAQb,SAAS,WAAW8I,MAAM,OACtDf,EAAYD,QAAU,QAKzB,kBAACpI,EAAA,EAAD,CAAgBC,aAAW,GACzB,kBAAC4H,GAAD,CAAgBlG,QAAS4B,GACvB,kBAAC,IAAD,CAAMxC,WAAY7B,EAAY8B,SAAS,OAAOb,MAAM,WAApD,cAoBV,OACE,wBAAUkJ,SAAS,EAAM1H,QAZD,WACpB0G,EAAYF,WACd1G,EAAQG,QAAR,iBAA0BmG,EAAiBW,SAAW,CACpD5B,YACAnE,UAAWoF,EAAiBoB,KAC5BvG,aAAcmF,EAAiBW,QAC/Bd,YAAaG,EAAiBN,WAOhC,wBACE/H,MAAO,CAAE4J,OAAQ,OACjBC,IAAKxB,EAAiB7B,KACtBsD,IAAKzB,EAAiB0B,UAExB,kBAAC,IAAD,CAAM/I,cAAc,UAClB,kBAAC,EAAD,CAAOW,WAAW,UAAU0G,EAAiB7B,MAC7C,kBAAC,EAAD,CAAa/E,UAAU,QAAQ4G,EAAiBN,SAEjDtE,I,SC5EQuG,GAlCa,WAAO,IACzB9K,EAAW2D,qBAAwBxD,GAAnCH,OACF6C,EAAUC,cACZiI,EAAwC,GAE5C,IAAK/K,EAEH,OADA6C,EAAQG,QAAQ,KACT,KAPuB,2BAUhC,YAAoBgI,GAApB,+CAA4B,CAAC,IAAlBC,EAAiB,QAC1BF,EAAkBG,KAAK,CACrB5D,KAAM2D,EAAM3D,KACZiD,KAAMU,EAAMV,KACZT,QAASmB,EAAMnB,QACfjB,OAAQoC,EAAMpC,OACdgC,QAASI,EAAMJ,QACf5G,WAAYgH,EAAME,cAAclH,WAChCC,WAAY+G,EAAME,cAAcjH,cAlBJ,kFAsBhC,OACE,kBAAC,EAAD,CAA2BnC,WAAW,QACpC,kBAAC,EAAD,CAAOJ,KAAK,OAAZ,oBACA,4BACGoJ,EAAkBK,KAAI,SAACC,EAAMC,GAAP,OACrB,kBAAC,GAAD,CAAeC,IAAKD,EAAGtL,OAAQA,EAAQmJ,iBAAkBkC,UCiDpDG,GAjFgB,WAAO,IAC5BxL,EAAW2D,qBAAwBxD,GAAnCH,OAEF6C,EAAUC,cACVc,EAAgBf,EAAQgB,SAASC,MACjCoE,EAAYtE,GAAiBA,EAAcsE,UALd,EAOP/D,mBAAiB,IAPV,mBAO5BgE,EAP4B,KAOpBC,EAPoB,OAQPjE,mBAAmBrE,EAASwE,MARrB,mBAQ5BC,EAR4B,KAQpBC,EARoB,OASTL,mBAAiB,IATR,mBAS5BM,EAT4B,KASrBC,EATqB,KAWnC,IAAK1E,IAAWkI,EAEd,OADArF,EAAQG,QAAQ,KACT,KAGT,IAIMyI,EAAQ,uCAAG,4BAAA7G,EAAA,6DACTM,EAAUlF,EAAO0L,oBAAoBxD,EAAWC,GACtD3D,EAAU1E,EAASyF,YAFJ,kBAIPL,EAJO,OAKbV,EAAU1E,EAAS0F,WALN,gDAObd,EAAS,KAAEe,SAAW,KAAER,YACxBT,EAAU1E,EAAS4F,QARN,yDAAH,qDAYRI,EACJ,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQ5C,KAAK,WAAWC,MAnBhB,WACZN,EAAQG,QAAQ,cAmBZ,kBAAC,EAAD,CAAOjC,UAAU,OAAjB,UACA,uBACED,MAAO,CAAEC,UAAW,MAAOiB,MAAO,QAClC+D,WAAY,EACZC,SAAU,SAAAC,GAAK,OAAImC,EAAUnC,EAAMC,OAAOC,QAC1CC,aAAc,uBAAgB1E,SAAS,OAAzB,OACd2E,WAAY,CACV,aAAc,aAIpB,kBAAC,EAAD,CAAavF,MAAO,CAAEC,UAAW,OAASgC,QAAS0I,GAAnD,SAMEnD,EACJ,kBAAC,EAAD,CACE3F,MAAM,cACNC,OAAO,0DAIL2D,EACJ,kBAAC,EAAD,CACE5D,MAAM,qBACNc,aAAc,kBAAMZ,EAAQG,QAAQ,cAIlCwD,EAAc,kBAAC,EAAD,CAAa7D,MAAM,kBAAkBC,OAAQ6B,IAEjE,OAAQF,GACN,KAAKzE,EAASwE,KACZ,OAAOwB,EACT,KAAKhG,EAASyF,WACZ,OAAO+C,EACT,KAAKxI,EAAS0F,UACZ,OAAOe,EACT,KAAKzG,EAAS4F,OACZ,OAAOc,ICxCEmF,GAtCO,WAAO,IAAD,EACExH,wBAA4BlE,GAD9B,mBACnBD,EADmB,KACXE,EADW,KAG1B,OACE,kBAACC,EAAcyL,SAAf,CAAwBzF,MAAO,CAAEnG,SAAQE,cACvC,kBAAC,IAAD,CAAe2L,SAAUC,qBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CACEA,KAAK,IACLC,SAAU,kBAAOhM,EAAS,kBAAC,GAAD,MAAgB,kBAAC,EAAD,aCjClCiM,QACW,cAA7BtF,OAAO9C,SAASqI,UAEe,UAA7BvF,OAAO9C,SAASqI,UAEhBvF,OAAO9C,SAASqI,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e90617c7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 100;","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { grey } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const CELER_THEME = createMuiTheme({\n  palette: {\n    primary: grey,\n    secondary: grey\n  }\n});\n\nexport const CELER_FONT =\n  //'system-ui, -apple-system, BlinkMacSystemFont, Helvetica Neue, Helvetica, Lucida Grande, Segoe UI, sans-serif';\n  'Helvetica Neue, Helvetica, Lucida Grande, Segoe UI, sans-serif';\n\nexport enum TxStatus {\n  IDLE,\n  PROCESSING,\n  SUCCEEDED,\n  FAILED\n}\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { Celer } from 'celer-light-client';\nimport React from 'react';\n\nexport interface ClientState {\n  client?: Celer;\n  setClient: React.Dispatch<React.SetStateAction<Celer | undefined>>;\n}\n\nconst emptyClientState = {\n  client: undefined,\n  setClient: (): void => {}\n};\n\nexport const ClientContext = React.createContext<ClientState>(emptyClientState);\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\n\nimport { Box } from '@material-ui/core';\n\nconst BoxWithMarginTop: React.FC<React.CSSProperties> = props => (\n  <Box style={{ marginTop: '1em' }} {...props}></Box>\n);\n\nexport default BoxWithMarginTop;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '@material-ui/core';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport { CELER_FONT } from '../../utils/utils';\n\nconst StyledButton = styled(Button)`\n  font-family: ${CELER_FONT};\n  && {\n    color: #ffffff;\n    background-color: #000000;\n    border-radius: 12px;\n  }\n  height: 40px;\n  min-height: 40px;\n  width: 336px;\n  max-width: 336px;\n  text-transform: none;\n\n  &:hover {\n    background-color: #616161;\n  }\n`;\n\nconst CelerButton: React.FC<ButtonProps> = props => (\n  <StylesProvider injectFirst>\n    <StyledButton\n      variant=\"contained\"\n      color=\"primary\"\n      size={'medium'}\n      {...props}\n    ></StyledButton>\n  </StylesProvider>\n);\n\nexport default CelerButton;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { Flex } from 'rimble-ui';\n\nconst CenteredFlexWithMarginTop: React.FC<React.CSSProperties> = props => (\n  <Flex\n    style={{\n      marginTop: '1em',\n      position: 'fixed',\n      left: '50%',\n      marginRight: '-50%',\n      transform: 'translate(-50%, 0%)'\n    }}\n    flexDirection=\"column\"\n    alignItems={props.alignItems ? props.alignItems : 'center'}\n    width=\"25%\"\n    minWidth=\"250px\"\n    {...props}\n  ></Flex>\n);\n\nexport default CenteredFlexWithMarginTop;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { Text } from 'rimble-ui';\n\nimport { CELER_FONT } from '../../utils/utils';\n\nconst SmallPrompt: React.FC<React.CSSProperties> = props => (\n  <Text\n    color={props.color ? props.color : '#8E8E93'}\n    fontFamily={CELER_FONT}\n    fontSize=\"16px\"\n    letterSpacing=\"0.19px\"\n    lineHeight=\"19px\"\n    textAlign={props.textAlign ? props.textAlign : 'center'}\n    {...props}\n  ></Text>\n);\n\nexport default SmallPrompt;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { Text } from 'rimble-ui';\n\nimport { CELER_FONT } from '../../utils/utils';\n\nconst Title: React.FC<React.CSSProperties> = props => (\n  <Text\n    color=\"#000000\"\n    fontFamily={CELER_FONT}\n    fontWeight={props.fontWeight ? props.fontWeight : 'bold'}\n    fontSize=\"16px\"\n    letterSpacing=\"0.19px\"\n    {...props}\n  ></Text>\n);\n\nexport default Title;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Text } from 'rimble-ui';\n\nimport { Link } from '@material-ui/core';\nimport { Error } from '@material-ui/icons';\n\nimport { CELER_FONT } from '../../utils/utils';\nimport BoxWithMarginTop from './BoxWithMarginTop';\nimport CenteredFlexWithMarginTop from './CenteredFlexWithMarginTop';\nimport SmallPrompt from './SmallPrompt';\nimport Title from './Title';\n\nexport interface ErrorPromptProps {\n  title: string;\n  prompt: string;\n}\n\nconst ErrorPrompt: React.FC<ErrorPromptProps> = ({ title, prompt }) => {\n  const history = useHistory();\n\n  return (\n    <CenteredFlexWithMarginTop>\n      <Title>{title}</Title>\n      <BoxWithMarginTop>\n        <Error />\n      </BoxWithMarginTop>\n      <SmallPrompt marginTop=\"1em\">{prompt}</SmallPrompt>\n      <BoxWithMarginTop>\n        <Link\n          onClick={() => {\n            history.replace('/');\n          }}\n        >\n          <Text fontFamily={CELER_FONT}>Back home</Text>\n        </Link>\n      </BoxWithMarginTop>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default ErrorPrompt;\n","import React from 'react';\nimport { Flex } from 'rimble-ui';\n\nimport { Box, IconButton } from '@material-ui/core';\nimport { Close } from '@material-ui/icons/';\n\nimport SmallPrompt from './SmallPrompt';\n\nexport interface HeaderProps {\n  text: string;\n  close: () => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ text, close }) => {\n  return (\n    <Box width=\"336px\" bgcolor=\"#219DDB\" alignItems=\"center\">\n      <Flex>\n        <SmallPrompt\n          color=\"#FFFFFF\"\n          width=\"90%\"\n          marginTop=\"15px\"\n          marginLeft=\"45px\"\n        >\n          {text}\n        </SmallPrompt>\n        <IconButton onClick={close}>\n          <Close />\n        </IconButton>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Header;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\n\nimport { CircularProgress } from '@material-ui/core';\n\nimport BoxWithMarginTop from './BoxWithMarginTop';\nimport CenteredFlexWithMarginTop from './CenteredFlexWithMarginTop';\nimport SmallPrompt from './SmallPrompt';\nimport Title from './Title';\n\nexport interface OnChainPromptProps {\n  title: string;\n  prompt: string;\n}\n\nconst OnChainPrompt: React.FC<OnChainPromptProps> = ({ title, prompt }) => {\n  return (\n    <CenteredFlexWithMarginTop>\n      <Title>{title}</Title>\n      <BoxWithMarginTop>\n        <CircularProgress />\n      </BoxWithMarginTop>\n      <SmallPrompt marginTop=\"1em\">{prompt}</SmallPrompt>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default OnChainPrompt;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\n\nimport { CheckCircle } from '@material-ui/icons';\n\nimport BoxWithMarginTop from './BoxWithMarginTop';\nimport CelerButton from './CelerButton';\nimport CenteredFlexWithMarginTop from './CenteredFlexWithMarginTop';\nimport Title from './Title';\n\nexport interface SuccessPromptProps {\n  title: string;\n  doneCallback: () => void;\n}\n\nconst SuccessPrompt: React.FC<SuccessPromptProps> = ({\n  title,\n  doneCallback\n}) => {\n  return (\n    <CenteredFlexWithMarginTop>\n      <Title>{title}</Title>\n      <BoxWithMarginTop>\n        <CheckCircle />\n      </BoxWithMarginTop>\n      <CelerButton style={{ marginTop: '2em' }} onClick={doneCallback}>\n        Done\n      </CelerButton>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default SuccessPrompt;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { TokenType } from 'celer-light-client';\nimport { ethers } from 'ethers';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { InputAdornment, OutlinedInput } from '@material-ui/core';\n\nimport { ClientContext, ClientState } from '../ClientContext';\nimport { TxStatus } from '../utils/utils';\nimport BoxWithMarginTop from './common/BoxWithMarginTop';\nimport CelerButton from './common/CelerButton';\nimport CenteredFlexWithMarginTop from './common/CenteredFlexWithMarginTop';\nimport ErrorPrompt from './common/ErrorPrompt';\nimport Header from './common/Header';\nimport OnChainPrompt from './common/OnChainPrompt';\nimport SmallPrompt from './common/SmallPrompt';\nimport SuccessPrompt from './common/SuccessPrompt';\nimport Title from './common/Title';\n\ninterface ActivateCardState {\n  tokenType: string;\n  tokenAddress: string;\n  minDeposit: string;\n  maxDeposit: string;\n}\n\nconst ActivateCard: React.FC = () => {\n  const { client } = useContext<ClientState>(ClientContext);\n\n  const history = useHistory<ActivateCardState>();\n  const locationState = history.location.state;\n  const tokenType = locationState && locationState.tokenType;\n  const tokenAddress = locationState && locationState.tokenAddress;\n  const minDeposit = locationState && locationState.minDeposit;\n  const maxDeposit = locationState && locationState.maxDeposit;\n\n  const [amountEth, setAmountEth] = useState<string>('');\n  const [status, setStatus] = useState<TxStatus>(TxStatus.IDLE);\n  const [error, setError] = useState<string>('');\n\n  if (!client || !tokenType || !tokenAddress) {\n    history.replace('/');\n    return null;\n  }\n\n  const close = () => {\n    history.replace('/tokens');\n  };\n\n  const activate = async () => {\n    const amountWei = ethers.utils.parseEther(amountEth).toString();\n    const promise = client.openPaymentChannel(\n      tokenType === 'ETH' ? TokenType.ETH : TokenType.ERC20,\n      tokenAddress,\n      amountWei,\n      amountWei\n    );\n    setStatus(TxStatus.PROCESSING);\n    try {\n      await promise;\n      setStatus(TxStatus.SUCCEEDED);\n    } catch (e) {\n      setError(e.message || e.toString());\n      setStatus(TxStatus.FAILED);\n    }\n  };\n\n  const minDepositEth = ethers.utils.formatEther(minDeposit);\n  const maxDepositEth = ethers.utils.formatEther(maxDeposit);\n\n  const card = (\n    <CenteredFlexWithMarginTop>\n      <BoxWithMarginTop>\n        <Header text=\"Activate\" close={close} />\n        <Title marginTop=\"1em\">Initial deposit</Title>\n        <OutlinedInput\n          style={{ marginTop: '1em', width: '100%' }}\n          labelWidth={0}\n          onChange={event => setAmountEth(event.target.value)}\n          endAdornment={<InputAdornment position=\"end\">ETH</InputAdornment>}\n          inputProps={{\n            'aria-label': 'amount'\n          }}\n        />\n        <SmallPrompt textAlign=\"left\">\n          Deposit to activate Celer Pay\n        </SmallPrompt>\n        <SmallPrompt textAlign=\"left\">\n          Minimum deposit: {minDepositEth} ETH\n        </SmallPrompt>\n        <SmallPrompt textAlign=\"left\">\n          Maximum deposit: {maxDepositEth} ETH\n        </SmallPrompt>\n      </BoxWithMarginTop>\n      <CelerButton style={{ marginTop: '2em' }} onClick={activate}>\n        Done\n      </CelerButton>\n    </CenteredFlexWithMarginTop>\n  );\n\n  const activatingPrompt = (\n    <OnChainPrompt\n      title=\"Activating\"\n      prompt=\"Do not close your window until activation is complete\"\n    />\n  );\n\n  const successPrompt = (\n    <SuccessPrompt\n      title=\"Activate succeeded\"\n      doneCallback={() => history.replace('/tokens')}\n    ></SuccessPrompt>\n  );\n\n  const errorPrompt = <ErrorPrompt title=\"Activate failed\" prompt={error} />;\n\n  switch (status) {\n    case TxStatus.IDLE:\n      return card;\n    case TxStatus.PROCESSING:\n      return activatingPrompt;\n    case TxStatus.SUCCEEDED:\n      return successPrompt;\n    case TxStatus.FAILED:\n      return errorPrompt;\n  }\n};\n\nexport default ActivateCard;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { Celer } from 'celer-light-client';\nimport { ethers } from 'ethers';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { ClientContext, ClientState } from '../../ClientContext';\nimport BoxWithMarginTop from '../common/BoxWithMarginTop';\nimport CelerButton from '../common/CelerButton';\nimport CenteredFlexWithMarginTop from '../common/CenteredFlexWithMarginTop';\nimport SmallPrompt from '../common/SmallPrompt';\nimport localConfig from './local_config.json';\nimport localContractsInfo from './local_contracts.json';\nimport mainnetConfig from './mainnet_config.json';\nimport mainnetContractsInfo from './mainnet_contracts.json';\nimport ropstenConfig from './ropsten_config.json';\nimport ropstenContractsInfo from './ropsten_contracts.json';\n\ndeclare global {\n  interface Window {\n    ethereum: {\n      send: (method: string, params: any) => Promise<any>;\n      enable: Function;\n      autoRefreshOnNetworkChange: boolean;\n    };\n    web3: { currentProvider: object };\n  }\n}\n\nconst ConnectCard: React.FC = () => {\n  const { client, setClient } = useContext<ClientState>(ClientContext);\n  const history = useHistory();\n\n  if (client) {\n    history.replace('/tokens');\n    return null;\n  }\n\n  const connect = async () => {\n    if (\n      typeof window.ethereum === 'undefined' &&\n      typeof window.web3 === 'undefined'\n    ) {\n      return;\n    }\n    if (window.ethereum) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n      await window.ethereum.enable();\n    }\n    const provider = new ethers.providers.Web3Provider(\n      window.ethereum || window.web3.currentProvider\n    );\n\n    let config;\n    let contractsInfo;\n    const network = await provider.getNetwork();\n    switch (network.name) {\n      case 'homestead':\n        config = mainnetConfig;\n        contractsInfo = mainnetContractsInfo;\n        break;\n      case 'ropsten':\n        config = ropstenConfig;\n        contractsInfo = ropstenContractsInfo;\n        break;\n      default:\n        config = localConfig;\n        contractsInfo = localContractsInfo;\n    }\n    const client = await Celer.create(\n      window.ethereum || window.web3.currentProvider,\n      0,\n      contractsInfo,\n      config\n    );\n    setClient(client);\n    history.replace('/tokens');\n  };\n\n  return (\n    <CenteredFlexWithMarginTop>\n      <BoxWithMarginTop>\n        <SmallPrompt width=\"272px\">\n          This website would like to connect your Celer Pay account\n        </SmallPrompt>\n      </BoxWithMarginTop>\n      <BoxWithMarginTop>\n        <CelerButton onClick={connect}>Connect wallet</CelerButton>\n      </BoxWithMarginTop>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default ConnectCard;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { TokenType } from 'celer-light-client';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, InputAdornment, OutlinedInput } from '@material-ui/core';\n\nimport { ClientContext, ClientState } from '../ClientContext';\nimport { TxStatus } from '../utils/utils';\nimport BoxWithMarginTop from './common/BoxWithMarginTop';\nimport CelerButton from './common/CelerButton';\nimport CenteredFlexWithMarginTop from './common/CenteredFlexWithMarginTop';\nimport ErrorPrompt from './common/ErrorPrompt';\nimport Header from './common/Header';\nimport OnChainPrompt from './common/OnChainPrompt';\nimport SuccessPrompt from './common/SuccessPrompt';\nimport Title from './common/Title';\n\nconst DepositCard: React.FC = () => {\n  const { client } = useContext<ClientState>(ClientContext);\n\n  const history = useHistory();\n  const locationState = history.location.state;\n  const channelId = locationState && locationState.channelId;\n  const tokenType = locationState && locationState.tokenType;\n  const tokenAddress = locationState && locationState.tokenAddress;\n\n  const [amount, setAmount] = useState<string>('');\n  const [status, setStatus] = useState<TxStatus>(TxStatus.IDLE);\n  const [error, setError] = useState<string>('');\n\n  if (!client || !channelId || !tokenType || !tokenAddress) {\n    history.replace('/');\n    return null;\n  }\n\n  const close = () => {\n    history.replace('/tokens');\n  };\n\n  const deposit = async () => {\n    const promise = client.deposit(\n      channelId,\n      tokenType === 'ETH' ? TokenType.ETH : TokenType.ERC20,\n      amount\n    );\n    setStatus(TxStatus.PROCESSING);\n    try {\n      await promise;\n      setStatus(TxStatus.SUCCEEDED);\n    } catch (e) {\n      setError(e.message || e.toString());\n      setStatus(TxStatus.FAILED);\n    }\n  };\n\n  const card = (\n    <CenteredFlexWithMarginTop>\n      <BoxWithMarginTop>\n        <Header text=\"Deposit\" close={close} />\n        <Title marginTop=\"1em\">Amount</Title>\n        <OutlinedInput\n          style={{ marginTop: '1em', width: '100%' }}\n          labelWidth={0}\n          onChange={event => setAmount(event.target.value)}\n          endAdornment={<InputAdornment position=\"end\">wei</InputAdornment>}\n          inputProps={{\n            'aria-label': 'amount'\n          }}\n        />\n      </BoxWithMarginTop>\n      <Box marginTop=\"2em\">\n        <CelerButton onClick={deposit}>Done</CelerButton>\n      </Box>\n    </CenteredFlexWithMarginTop>\n  );\n\n  const processingPrompt = (\n    <OnChainPrompt\n      title=\"Depositing\"\n      prompt=\"Do not close your window until deposit is complete\"\n    />\n  );\n\n  const successPrompt = (\n    <SuccessPrompt\n      title=\"Deposit succeeded\"\n      doneCallback={() => history.replace(`/token/${tokenAddress}`)}\n    ></SuccessPrompt>\n  );\n\n  const errorPrompt = <ErrorPrompt title=\"Deposit failed\" prompt={error} />;\n\n  switch (status) {\n    case TxStatus.IDLE:\n      return card;\n    case TxStatus.PROCESSING:\n      return processingPrompt;\n    case TxStatus.SUCCEEDED:\n      return successPrompt;\n    case TxStatus.FAILED:\n      return errorPrompt;\n  }\n};\n\nexport default DepositCard;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { TokenType } from 'celer-light-client';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { InputAdornment, OutlinedInput } from '@material-ui/core';\n\nimport { ClientContext, ClientState } from '../ClientContext';\nimport BoxWithMarginTop from './common/BoxWithMarginTop';\nimport CelerButton from './common/CelerButton';\nimport CenteredFlexWithMarginTop from './common/CenteredFlexWithMarginTop';\nimport Header from './common/Header';\nimport Title from './common/Title';\n\nconst SendCard: React.FC = () => {\n  const { client } = useContext<ClientState>(ClientContext);\n\n  const history = useHistory();\n  const tokenType = history.location.state.tokenType;\n  const tokenAddress = history.location.state.tokenAddress;\n\n  const [destination, setDestination] = useState<string>('');\n  const [amount, setAmount] = useState<string>('');\n\n  if (!client || !tokenType || !tokenAddress) {\n    history.replace('/');\n    return null;\n  }\n\n  const close = () => {\n    history.replace('/tokens');\n  };\n\n  const send = async () => {\n    await client.sendPayment(\n      tokenType === 'ETH' ? TokenType.ETH : TokenType.ERC20,\n      tokenAddress,\n      destination,\n      amount\n    );\n    history.replace('/tokens');\n  };\n\n  return (\n    <CenteredFlexWithMarginTop>\n      <BoxWithMarginTop>\n        <Header text=\"Send\" close={close} />\n        <Title marginTop=\"1em\">Destination address</Title>\n        <OutlinedInput\n          style={{ marginTop: '1em', width: '100%' }}\n          labelWidth={0}\n          onChange={event => setDestination(event.target.value)}\n          inputProps={{\n            'aria-label': 'destination'\n          }}\n        />\n        <Title marginTop=\"1em\">Amount</Title>\n        <OutlinedInput\n          style={{ marginTop: '1em', width: '100%' }}\n          labelWidth={0}\n          onChange={event => setAmount(event.target.value)}\n          endAdornment={<InputAdornment position=\"end\">wei</InputAdornment>}\n          inputProps={{\n            'aria-label': 'amount'\n          }}\n        />\n      </BoxWithMarginTop>\n      <CelerButton style={{ marginTop: '2em' }} onClick={send}>\n        Done\n      </CelerButton>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default SendCard;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Flex } from 'rimble-ui';\n\nimport { Box, IconButton } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons/';\n\nimport SmallPrompt from '../common/SmallPrompt';\n\nexport interface TokenDetailsHeaderProps {\n  symbol: string;\n}\n\nconst TokenDetailsHeader: React.FC<TokenDetailsHeaderProps> = ({ symbol }) => {\n  const history = useHistory();\n\n  return (\n    <Box width=\"336px\" bgcolor=\"#219DDB\" alignItems=\"center\">\n      <Flex>\n        <IconButton onClick={() => history.replace('/tokens')}>\n          <ArrowBack />\n        </IconButton>\n        <SmallPrompt\n          color=\"#FFFFFF\"\n          width=\"100%\"\n          marginTop=\"15px\"\n          marginLeft=\"-45px\"\n        >\n          {symbol}\n        </SmallPrompt>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default TokenDetailsHeader;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Flex } from 'rimble-ui';\nimport styled from 'styled-components';\n\nimport { Button } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport CenteredFlexWithMarginTop from '../common/CenteredFlexWithMarginTop';\nimport TokenDetailsHeader from './TokenDetailsHeader';\n\ninterface TokenDetailsState {\n  channelId: string;\n  tokenType: string;\n  tokenSymbol: string;\n  tokenAddress: string;\n}\n\nconst StyledButton = styled(Button)`\n  height: 28px;\n  width: 84px;\n  && {\n    color: #ffffff;\n    border-radius: 14px;\n    background-color: #1281ff;\n    margin-top: 1em;\n    margin-left: 1em;\n    margin-right: 1em;\n  }\n  text-transform: none;\n\n  &:hover {\n    background-color: #90caf9;\n  }\n`;\n\nconst TokenDetails: React.FC = () => {\n  const history = useHistory<TokenDetailsState>();\n  const locationState = history.location.state;\n  const channelId = locationState && locationState.channelId;\n  const tokenType = locationState && locationState.tokenType;\n  const tokenSymbol = locationState && locationState.tokenSymbol;\n  const tokenAddress = locationState && locationState.tokenAddress;\n\n  if (!channelId || !tokenType || !tokenSymbol || !tokenAddress) {\n    history.replace('/');\n    return null;\n  }\n\n  return (\n    <CenteredFlexWithMarginTop>\n      <TokenDetailsHeader symbol={tokenSymbol} />\n      <Flex>\n        <StylesProvider injectFirst>\n          <StyledButton\n            onClick={() =>\n              history.replace('/deposit', {\n                channelId,\n                tokenType,\n                tokenSymbol,\n                tokenAddress\n              })\n            }\n          >\n            Deposit\n          </StyledButton>\n        </StylesProvider>\n        <StylesProvider injectFirst>\n          <StyledButton\n            onClick={() =>\n              history.replace('/withdraw', {\n                channelId,\n                tokenType,\n                tokenSymbol,\n                tokenAddress\n              })\n            }\n          >\n            Withdraw\n          </StyledButton>\n        </StylesProvider>\n        <StylesProvider injectFirst>\n          <StyledButton\n            onClick={() =>\n              history.replace('/send', {\n                channelId,\n                tokenType,\n                tokenSymbol,\n                tokenAddress\n              })\n            }\n          >\n            Send\n          </StyledButton>\n        </StylesProvider>\n      </Flex>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default TokenDetails;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { Celer } from 'celer-light-client';\nimport React, { ReactElement, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Flex, Text } from 'rimble-ui';\nimport styled from 'styled-components';\n\nimport { Avatar, Button, ListItem } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport { CELER_FONT } from '../../utils/utils';\nimport SmallPrompt from '../common/SmallPrompt';\nimport Title from '../common/Title';\nimport { TokenDisplayInfo } from './TokenList';\n\ninterface TokenListItemProps {\n  client: Celer;\n  tokenDisplayInfo: TokenDisplayInfo;\n}\n\ninterface BalanceInfo {\n  activated: boolean;\n  balance: string;\n}\n\nconst ActivateButton = styled(Button)`\n  height: 28px;\n  width: 64px;\n  border-radius: 14px;\n  background-color: #1281ff;\n  text-transform: none;\n  position: absolute;\n  right: 0px;\n\n  &:hover {\n    background-color: #90caf9;\n  }\n`;\n\nconst TokenListItem: React.FC<TokenListItemProps> = ({\n  client,\n  tokenDisplayInfo\n}) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [channelId, setChannelId] = useState<string>('');\n  const [balanceInfo, setBalanceInfo] = useState<BalanceInfo>({\n    activated: false,\n    balance: '0'\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    const getBalance = async () => {\n      const channelIds = await client.getAllPaymentChannelIdsForToken(\n        tokenDisplayInfo.address\n      );\n      setIsLoading(false);\n      if (channelIds.length === 0) {\n        setBalanceInfo({ activated: false, balance: '0' });\n      } else {\n        const channelId = channelIds[0];\n        setChannelId(channelId);\n        const channel = await client.getPaymentChannelInfo(channelId);\n        setBalanceInfo({\n          activated: true,\n          balance: channel.balance.freeSendingCapacity\n        });\n      }\n    };\n    getBalance();\n    const interval = setInterval(() => getBalance(), 1000);\n    return () => clearInterval(interval);\n  }, [client, tokenDisplayInfo.address]);\n\n  const activate = async () => {\n    history.replace('/activate', {\n      tokenType: tokenDisplayInfo.type,\n      tokenAddress: tokenDisplayInfo.address,\n      minDeposit: tokenDisplayInfo.minDeposit,\n      maxDeposit: tokenDisplayInfo.maxDeposit\n    });\n  };\n\n  let status: ReactElement;\n  if (isLoading) {\n    status = (\n      <SmallPrompt position=\"absolute\" right=\"0px\">\n        Loading\n      </SmallPrompt>\n    );\n  } else {\n    if (balanceInfo.activated) {\n      status = (\n        <SmallPrompt textAlign=\"right\" position=\"absolute\" right=\"0px\">\n          {balanceInfo.balance + ' wei'}\n        </SmallPrompt>\n      );\n    } else {\n      status = (\n        <StylesProvider injectFirst>\n          <ActivateButton onClick={activate}>\n            <Text fontFamily={CELER_FONT} fontSize=\"12px\" color=\"#FFFFFF\">\n              Activate\n            </Text>\n          </ActivateButton>\n        </StylesProvider>\n      );\n    }\n  }\n\n  const enterTokenDetails = () => {\n    if (balanceInfo.activated) {\n      history.replace(`/token/${tokenDisplayInfo.address}`, {\n        channelId,\n        tokenType: tokenDisplayInfo.type,\n        tokenAddress: tokenDisplayInfo.address,\n        tokenSymbol: tokenDisplayInfo.symbol\n      });\n    }\n  };\n\n  return (\n    <ListItem divider={true} onClick={enterTokenDetails}>\n      <Avatar\n        style={{ margin: '8px' }}\n        alt={tokenDisplayInfo.name}\n        src={tokenDisplayInfo.iconUrl}\n      />\n      <Flex flexDirection=\"column\">\n        <Title fontWeight=\"normal\">{tokenDisplayInfo.name}</Title>\n        <SmallPrompt textAlign=\"left\">{tokenDisplayInfo.symbol}</SmallPrompt>\n      </Flex>\n      {status}\n    </ListItem>\n  );\n};\n\nexport default TokenListItem;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { List } from '@material-ui/core';\n\nimport { ClientContext, ClientState } from '../../ClientContext';\nimport CenteredFlexWithMarginTop from '../common/CenteredFlexWithMarginTop';\nimport Title from '../common/Title';\nimport TokenListItem from './TokenListItem';\nimport tokens from './tokens.json';\n\nexport interface TokenDisplayInfo {\n  name: string;\n  type: string;\n  address: string;\n  symbol: string;\n  iconUrl: string;\n  minDeposit: string;\n  maxDeposit: string;\n}\n\nconst TokenList: React.FC = () => {\n  const { client } = useContext<ClientState>(ClientContext);\n  const history = useHistory();\n  let tokenDisplayInfos: TokenDisplayInfo[] = [];\n\n  if (!client) {\n    history.replace('/');\n    return null;\n  }\n\n  for (const token of tokens) {\n    tokenDisplayInfos.push({\n      name: token.name,\n      type: token.type,\n      address: token.address,\n      symbol: token.symbol,\n      iconUrl: token.iconUrl,\n      minDeposit: token.depositLimits.minDeposit,\n      maxDeposit: token.depositLimits.maxDeposit\n    });\n  }\n\n  return (\n    <CenteredFlexWithMarginTop alignItems=\"left\">\n      <Title left=\"25%\">Available tokens</Title>\n      <List>\n        {tokenDisplayInfos.map((info, i) => (\n          <TokenListItem key={i} client={client} tokenDisplayInfo={info} />\n        ))}\n      </List>\n    </CenteredFlexWithMarginTop>\n  );\n};\n\nexport default TokenList;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { InputAdornment, OutlinedInput } from '@material-ui/core';\n\nimport { ClientContext, ClientState } from '../ClientContext';\nimport { TxStatus } from '../utils/utils';\nimport BoxWithMarginTop from './common/BoxWithMarginTop';\nimport CelerButton from './common/CelerButton';\nimport CenteredFlexWithMarginTop from './common/CenteredFlexWithMarginTop';\nimport ErrorPrompt from './common/ErrorPrompt';\nimport Header from './common/Header';\nimport OnChainPrompt from './common/OnChainPrompt';\nimport SuccessPrompt from './common/SuccessPrompt';\nimport Title from './common/Title';\n\nconst WithdrawCard: React.FC = () => {\n  const { client } = useContext<ClientState>(ClientContext);\n\n  const history = useHistory();\n  const locationState = history.location.state;\n  const channelId = locationState && locationState.channelId;\n\n  const [amount, setAmount] = useState<string>('');\n  const [status, setStatus] = useState<TxStatus>(TxStatus.IDLE);\n  const [error, setError] = useState<string>('');\n\n  if (!client || !channelId) {\n    history.replace('/');\n    return null;\n  }\n\n  const close = () => {\n    history.replace('/tokens');\n  };\n\n  const withdraw = async () => {\n    const promise = client.cooperativeWithdraw(channelId, amount);\n    setStatus(TxStatus.PROCESSING);\n    try {\n      await promise;\n      setStatus(TxStatus.SUCCEEDED);\n    } catch (e) {\n      setError(e.message || e.toString());\n      setStatus(TxStatus.FAILED);\n    }\n  };\n\n  const card = (\n    <CenteredFlexWithMarginTop>\n      <BoxWithMarginTop>\n        <Header text=\"Withdraw\" close={close} />\n        <Title marginTop=\"1em\">Amount</Title>\n        <OutlinedInput\n          style={{ marginTop: '1em', width: '100%' }}\n          labelWidth={0}\n          onChange={event => setAmount(event.target.value)}\n          endAdornment={<InputAdornment position=\"end\">wei</InputAdornment>}\n          inputProps={{\n            'aria-label': 'amount'\n          }}\n        />\n      </BoxWithMarginTop>\n      <CelerButton style={{ marginTop: '2em' }} onClick={withdraw}>\n        Done\n      </CelerButton>\n    </CenteredFlexWithMarginTop>\n  );\n\n  const processingPrompt = (\n    <OnChainPrompt\n      title=\"Withdrawing\"\n      prompt=\"Do not close your window until withdrawal is complete\"\n    />\n  );\n\n  const successPrompt = (\n    <SuccessPrompt\n      title=\"Withdraw succeeded\"\n      doneCallback={() => history.replace('/tokens')}\n    ></SuccessPrompt>\n  );\n\n  const errorPrompt = <ErrorPrompt title=\"Withdraw failed\" prompt={error} />;\n\n  switch (status) {\n    case TxStatus.IDLE:\n      return card;\n    case TxStatus.PROCESSING:\n      return processingPrompt;\n    case TxStatus.SUCCEEDED:\n      return successPrompt;\n    case TxStatus.FAILED:\n      return errorPrompt;\n  }\n};\n\nexport default WithdrawCard;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport './App.css';\n\nimport { Celer } from 'celer-light-client';\nimport React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { ClientContext } from './ClientContext';\nimport ActivateCard from './components/ActivateCard';\nimport ConnectCard from './components/ConnectCard/ConnectCard';\nimport DepositCard from './components/DepositCard';\nimport SendCard from './components/SendCard';\nimport TokenDetails from './components/TokenDetails/TokenDetails';\nimport TokenList from './components/TokenList/TokenList';\nimport WithdrawCard from './components/WithdrawCard';\n\nconst App: React.FC = () => {\n  const [client, setClient] = useState<Celer | undefined>(undefined);\n\n  return (\n    <ClientContext.Provider value={{ client, setClient }}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/connect\">\n            <ConnectCard />\n          </Route>\n          <Route path=\"/tokens\">\n            <TokenList />\n          </Route>\n          <Route path=\"/token/:address\">\n            <TokenDetails />\n          </Route>\n          <Route path=\"/activate\">\n            <ActivateCard />\n          </Route>\n          <Route path=\"/send\">\n            <SendCard />\n          </Route>\n          <Route path=\"/deposit\">\n            <DepositCard />\n          </Route>\n          <Route path=\"/withdraw\">\n            <WithdrawCard />\n          </Route>\n          <Route\n            path=\"/\"\n            children={() => (client ? <TokenList /> : <ConnectCard />)}\n          ></Route>\n        </Switch>\n      </BrowserRouter>\n    </ClientContext.Provider>\n  );\n};\n\nexport default App;\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @license\n * The MIT License\n *\n * Copyright (c) 2019 Celer Network\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}